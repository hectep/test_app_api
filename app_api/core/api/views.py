from rest_framework import status
from rest_framework.generics import (UpdateAPIView,
                                     RetrieveAPIView,
                                     get_object_or_404)
from rest_framework.response import Response
from rest_framework.viewsets import ModelViewSet

from core.api.serializers import AppModelSerializer, ReadOnlyModelSerializer
from core.models import App
from core.utils import generate_api_key


class AppViewSet(ModelViewSet):
    queryset = App.objects.all()
    serializer_class = AppModelSerializer


class RetrieveAppByApiKeyView(RetrieveAPIView):
    """
    View for requesting app information by its api key (the test method)
    """
    queryset = App.objects.all()
    serializer_class = AppModelSerializer
    lookup_field = 'api_key'


class AppApiKeyUpdateView(UpdateAPIView):
    """
    View for updating API key of an app.
    API key is regenerated by util function
    """

    queryset = App.objects.all()
    serializer_class = ReadOnlyModelSerializer

    def put(self, request, *args, **kwargs):
        app = get_object_or_404(App, pk=kwargs['pk'])
        app.api_key = generate_api_key()
        app.save()

        serializer = self.serializer_class(app)

        return Response(serializer.data, status=status.HTTP_200_OK)
